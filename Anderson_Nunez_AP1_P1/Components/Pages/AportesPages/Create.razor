@page "/Aportes/Create"
@using Blazored.Toast.Services
@using Anderson_Nunez_AP1_P1.Models
@inject AportesService aporteService
@inject IToastService toastService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Crear Aporte</PageTitle>

<EditForm Model="Aportes" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container mt-3">
        <div class="card shadow">
            <div class="card-header bg-primary text-white text-center">
                <h5>Crear Aporte</h5>
            </div>

            <div class="card-body">
                @*Id Aporte*@
                <div class="mb-3">
                    <label class="form-label"><strong>Aporte ID</strong></label>
                    <InputNumber id="AporteId" class="form-control" @bind-Value="Aportes.AporteId" readonly></InputNumber>
                </div>

                @*Fecha*@
                <div class="mb-3">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate @bind-Value="Aportes.Fecha" class="form-control" />
                    <ValidationMessage For="@(() => Aportes.Fecha)" />
                </div>

                @*Nombre*@
                <div class="mb-3">
                    <label class="form-label"><strong>Nombre</strong></label>
                    <InputText @bind-Value="Aportes.Nombre" class="form-control" />
                    <ValidationMessage For="@(() => Aportes.Nombre)" />
                </div>

                @*Monto*@
                <div class="mb-3">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber @bind-Value="Aportes.Monto" class="form-control" />
                    <ValidationMessage For="@(() => Aportes.Monto)" />
                </div>
            </div>

            <div class="card-footer text-center">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-secondary me-2" @onclick="Volver">
                        <i class="bi bi-arrow-left"></i> Volver
                    </button>
                    <button type="submit" class="btn btn-outline-success me-2">
                        <i class="bi bi-check-circle"></i> Guardar
                    </button>
                    <button type="button" class="btn btn-outline-primary" @onclick="Nuevo">
                        <i class="bi bi-eraser"></i> Limpiar
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Aportes Aportes { get; set; } = new Aportes();

    private async Task Nuevo()
    {
        Aportes = new Aportes();
    }

    private async Task<bool> Validar()
    {
        var existente = await aporteService.Buscar(Aportes.AporteId);
        return existente != null;
    }

    private async Task Guardar()
    {
        if (await Validar())
        {
            toastService.ShowWarning("Ya existe un aporte con ese Id.");
            return;
        }

        var creado = await aporteService.Guardar(Aportes);
        if (creado)
        {
            toastService.ShowSuccess($"Aporte #{Aportes.AporteId} creado correctamente.");
            Volver();
        }
        else
        {
            toastService.ShowError("Error al crear el aporte.");
        }
    }

    private void Volver()
    {
        Navigation.NavigateTo("/Aportes/Index");
    }
}